{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alejo\\\\Downloads\\\\Proyecto_Grado\\\\Proyecto_Aplicaciones2Principal\\\\frontend\\\\src\\\\components\\\\chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [message, setMessage] = useState(\"\"); // Mensaje actual del usuario\n  const [conversation, setConversation] = useState([]); // Historial de la conversación\n  const [error, setError] = useState(\"\"); // Manejo de errores\n\n  // Obtén el session_id desde localStorage\n  const sessionId = localStorage.getItem(\"id_sesion\");\n  const sendMessage = async e => {\n    e.preventDefault();\n    setError(\"\"); // Reinicia el estado del error\n\n    if (!sessionId) {\n      setError(\"No se encontró un session_id. Por favor, inicia sesión nuevamente.\");\n      return;\n    }\n    try {\n      // Agrega el mensaje del usuario a la conversación\n      setConversation(prev => [...prev, {\n        sender: \"Usuario\",\n        text: message\n      }]);\n\n      // Envía el mensaje al backend\n      const response = await fetch(\"http://localhost:5000/api/chatbot\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: message,\n          session_id: sessionId\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        setError(data.error);\n      } else {\n        // Agrega la respuesta del chatbot a la conversación\n        setConversation(prev => [...prev, {\n          sender: \"Chatbot\",\n          text: data.response\n        }]);\n      }\n    } catch (err) {\n      console.error(\"Error al enviar el mensaje:\", err);\n      setError(\"No se pudo enviar el mensaje. Inténtalo más tarde.\");\n    } finally {\n      setMessage(\"\"); // Limpia el mensaje después de enviarlo\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      // Enviar solicitud de logout al backend\n      await fetch(\"http://localhost:5000/logout\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id_sesion: sessionId\n        })\n      });\n      // Limpiar el session_id del localStorage\n      localStorage.removeItem(\"id_sesion\");\n      // Redirigir al usuario al login\n      window.location.href = \"/login\";\n    } catch (err) {\n      console.error(\"Error al cerrar sesión:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation\",\n      children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: msg.sender === \"Usuario\" ? \"user-message\" : \"bot-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Escribe tu mensaje...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Cerrar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"9SWQ1FZ04pYvkaI7TjvWk1ur9KA=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","conversation","setConversation","error","setError","sessionId","localStorage","getItem","sendMessage","e","preventDefault","prev","sender","text","response","fetch","method","headers","body","JSON","stringify","prompt","session_id","data","json","err","console","handleLogout","id_sesion","removeItem","window","location","href","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","msg","index","onSubmit","type","value","onChange","target","placeholder","required","style","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/alejo/Downloads/Proyecto_Grado/Proyecto_Aplicaciones2Principal/frontend/src/components/chat.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Chat() {\r\n  const [message, setMessage] = useState(\"\"); // Mensaje actual del usuario\r\n  const [conversation, setConversation] = useState([]); // Historial de la conversación\r\n  const [error, setError] = useState(\"\"); // Manejo de errores\r\n\r\n  // Obtén el session_id desde localStorage\r\n  const sessionId = localStorage.getItem(\"id_sesion\");\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\"); // Reinicia el estado del error\r\n\r\n    if (!sessionId) {\r\n      setError(\"No se encontró un session_id. Por favor, inicia sesión nuevamente.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Agrega el mensaje del usuario a la conversación\r\n      setConversation((prev) => [...prev, { sender: \"Usuario\", text: message }]);\r\n\r\n      // Envía el mensaje al backend\r\n      const response = await fetch(\"http://localhost:5000/api/chatbot\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ prompt: message, session_id: sessionId }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.error) {\r\n        setError(data.error);\r\n      } else {\r\n        // Agrega la respuesta del chatbot a la conversación\r\n        setConversation((prev) => [...prev, { sender: \"Chatbot\", text: data.response }]);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error al enviar el mensaje:\", err);\r\n      setError(\"No se pudo enviar el mensaje. Inténtalo más tarde.\");\r\n    } finally {\r\n      setMessage(\"\"); // Limpia el mensaje después de enviarlo\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      // Enviar solicitud de logout al backend\r\n      await fetch(\"http://localhost:5000/logout\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ id_sesion: sessionId }),\r\n      });\r\n      // Limpiar el session_id del localStorage\r\n      localStorage.removeItem(\"id_sesion\");\r\n      // Redirigir al usuario al login\r\n      window.location.href = \"/login\";\r\n    } catch (err) {\r\n      console.error(\"Error al cerrar sesión:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Chatbot</h2>\r\n\r\n      {/* Mostrar conversación */}\r\n      <div className=\"conversation\">\r\n        {conversation.map((msg, index) => (\r\n          <p\r\n            key={index}\r\n            className={msg.sender === \"Usuario\" ? \"user-message\" : \"bot-message\"}\r\n          >\r\n            <strong>{msg.sender}:</strong> {msg.text}\r\n          </p>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Formulario para enviar mensajes */}\r\n      <form onSubmit={sendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Escribe tu mensaje...\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Enviar</button>\r\n      </form>\r\n\r\n      {/* Mostrar errores */}\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      {/* Botón para cerrar sesión */}\r\n      <button onClick={handleLogout}>Cerrar Sesión</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}