{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alejo\\\\Downloads\\\\Proyecto_Grado\\\\Proyecto_GradoSprint4 - copia\\\\CHATBOTAP\\\\frontend\\\\src\\\\GeneradorTextoChatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./GeneradorTextoChatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GeneradorTextoChatbot() {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [conversation, setConversation] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [graphUrl, setGraphUrl] = useState(\"\");\n  const [sessionId, setSessionId] = useState(\"\");\n  const [nombreUsuario, setNombreUsuario] = useState(\"\");\n\n  // Obtener el session_id desde la URL\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const session_id = queryParams.get(\"session_id\");\n    if (session_id) {\n      setSessionId(session_id);\n    } else {\n      console.error(\"No se proporcionó un session_id en la URL.\");\n      window.location.href = \"http://localhost:3000\";\n    }\n    const nombre = localStorage.getItem(\"nombre_usuario\");\n    if (nombre) {\n      setNombreUsuario(nombre);\n    }\n  }, []);\n\n  // Obtener la URL de la gráfica al cargar el componente\n  useEffect(() => {\n    if (sessionId) {\n      setGraphUrl(`http://localhost:5000/api/user-interactions?session_id=${sessionId}`);\n    }\n  }, [sessionId]);\n\n  // Cargar conversación desde localStorage\n  useEffect(() => {\n    const savedConversation = localStorage.getItem(\"conversation\");\n    if (savedConversation) {\n      setConversation(JSON.parse(savedConversation));\n    }\n  }, []);\n\n  // Guardar conversación en localStorage\n  useEffect(() => {\n    localStorage.setItem(\"conversation\", JSON.stringify(conversation));\n  }, [conversation]);\n  const generateText = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setErrorMessage(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/api/chatbot\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt,\n          id_sesion: sessionId\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        setErrorMessage(errorData.error || \"Error desconocido en el servidor\");\n        return;\n      }\n      const data = await response.json();\n      const respuestaChatGPT = data.response;\n      setConversation(prev => [...prev, {\n        sender: nombreUsuario,\n        text: prompt\n      }, {\n        sender: \"Chatbot\",\n        text: respuestaChatGPT\n      }]);\n    } catch (error) {\n      console.error(\"Error en la solicitud:\", error);\n      setErrorMessage(\"Error en la solicitud al servidor\");\n    } finally {\n      setIsLoading(false);\n      setPrompt(\"\");\n    }\n  };\n  const handleLogout = async () => {\n    if (!sessionId) {\n      console.error(\"No se encontró un session_id en la URL.\");\n      setErrorMessage(\"No se encontró una sesión activa.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/logout\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id_sesion: sessionId\n        }) // Aquí debe coincidir con lo que espera el backend\n      });\n      if (response.ok) {\n        console.log(\"Sesión cerrada correctamente.\");\n        localStorage.removeItem(\"id_sesion\");\n        window.location.href = \"http://localhost:3000/login\";\n      } else {\n        const data = await response.json();\n        setErrorMessage(data.message || \"No se pudo cerrar la sesión.\");\n      }\n    } catch (error) {\n      console.error(\"Error en la solicitud de logout:\", error);\n      setErrorMessage(\"Error en la solicitud al servidor para cerrar sesión.\");\n    }\n    setSessionId(\"\");\n    setConversation([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === nombreUsuario ? \"user\" : \"bot\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: generateText,\n      className: \"input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: prompt,\n        onChange: e => setPrompt(e.target.value),\n        placeholder: \"Escribe tu mensaje...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? \"Enviando...\" : \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), graphUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Interacciones del Usuario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: graphUrl,\n        alt: \"Gr\\xE1fica de interacciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(GeneradorTextoChatbot, \"LmhVWpwZKwes+ToPBGNSzproyOM=\");\n_c = GeneradorTextoChatbot;\nexport default GeneradorTextoChatbot;\nvar _c;\n$RefreshReg$(_c, \"GeneradorTextoChatbot\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GeneradorTextoChatbot","_s","prompt","setPrompt","conversation","setConversation","isLoading","setIsLoading","errorMessage","setErrorMessage","graphUrl","setGraphUrl","sessionId","setSessionId","nombreUsuario","setNombreUsuario","queryParams","URLSearchParams","window","location","search","session_id","get","console","error","href","nombre","localStorage","getItem","savedConversation","JSON","parse","setItem","stringify","generateText","e","preventDefault","response","fetch","method","headers","body","id_sesion","ok","errorData","json","data","respuestaChatGPT","prev","sender","text","handleLogout","log","removeItem","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onSubmit","type","value","onChange","target","placeholder","required","disabled","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/alejo/Downloads/Proyecto_Grado/Proyecto_GradoSprint4 - copia/CHATBOTAP/frontend/src/GeneradorTextoChatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./GeneradorTextoChatbot.css\";\r\n\r\nfunction GeneradorTextoChatbot() {\r\n  const [prompt, setPrompt] = useState(\"\");\r\n  const [conversation, setConversation] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [graphUrl, setGraphUrl] = useState(\"\");\r\n  const [sessionId, setSessionId] = useState(\"\");\r\n  const [nombreUsuario, setNombreUsuario] = useState(\"\");\r\n  \r\n\r\n  // Obtener el session_id desde la URL\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n    const session_id = queryParams.get(\"session_id\");\r\n    if (session_id) {\r\n      setSessionId(session_id);\r\n    } else {\r\n      console.error(\"No se proporcionó un session_id en la URL.\");\r\n      window.location.href = \"http://localhost:3000\";\r\n    }\r\n    const nombre = localStorage.getItem(\"nombre_usuario\");\r\n    if (nombre) {\r\n      setNombreUsuario(nombre);\r\n    }\r\n  }, []);\r\n\r\n  // Obtener la URL de la gráfica al cargar el componente\r\n  useEffect(() => {\r\n    if (sessionId) {\r\n      setGraphUrl(`http://localhost:5000/api/user-interactions?session_id=${sessionId}`);\r\n    }\r\n  }, [sessionId]);\r\n\r\n  // Cargar conversación desde localStorage\r\n  useEffect(() => {\r\n    const savedConversation = localStorage.getItem(\"conversation\");\r\n    if (savedConversation) {\r\n      setConversation(JSON.parse(savedConversation));\r\n    }\r\n  }, []);\r\n\r\n  // Guardar conversación en localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"conversation\", JSON.stringify(conversation));\r\n  }, [conversation]);\r\n\r\n  const generateText = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setErrorMessage(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/chatbot\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ prompt, id_sesion: sessionId }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        setErrorMessage(errorData.error || \"Error desconocido en el servidor\");\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      const respuestaChatGPT = data.response;\r\n\r\n      setConversation((prev) => [\r\n        ...prev,\r\n        { sender: nombreUsuario, text: prompt },\r\n        { sender: \"Chatbot\", text: respuestaChatGPT },\r\n      ]);\r\n    } catch (error) {\r\n      console.error(\"Error en la solicitud:\", error);\r\n      setErrorMessage(\"Error en la solicitud al servidor\");\r\n    } finally {\r\n      setIsLoading(false);\r\n      setPrompt(\"\");\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    if (!sessionId) {\r\n      console.error(\"No se encontró un session_id en la URL.\");\r\n      setErrorMessage(\"No se encontró una sesión activa.\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/logout\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ id_sesion: sessionId }), // Aquí debe coincidir con lo que espera el backend\r\n      });\r\n  \r\n      if (response.ok) {\r\n        console.log(\"Sesión cerrada correctamente.\");\r\n        localStorage.removeItem(\"id_sesion\");\r\n        window.location.href = \"http://localhost:3000/login\";\r\n      } else {\r\n        const data = await response.json();\r\n        setErrorMessage(data.message || \"No se pudo cerrar la sesión.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error en la solicitud de logout:\", error);\r\n      setErrorMessage(\"Error en la solicitud al servidor para cerrar sesión.\");\r\n    }\r\n    setSessionId(\"\");\r\n    setConversation([]);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"chat-container\">\r\n      {/* Mostrar errores si los hay */}\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n      {/* Mostrar conversación */}\r\n      <div className=\"chat-box\">\r\n        {conversation.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message ${msg.sender === nombreUsuario ? \"user\" : \"bot\"}`}\r\n          >\r\n            <strong>{msg.sender}:</strong> {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Input para el mensaje */}\r\n      <form onSubmit={generateText} className=\"input-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={prompt}\r\n          onChange={(e) => setPrompt(e.target.value)}\r\n          placeholder=\"Escribe tu mensaje...\"\r\n          required\r\n        />\r\n        <button type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? \"Enviando...\" : \"Enviar\"}\r\n        </button>\r\n      </form>\r\n\r\n      {/* Mostrar la gráfica */}\r\n      {graphUrl && (\r\n        <div className=\"graph-container\">\r\n          <h2>Interacciones del Usuario</h2>\r\n          <img src={graphUrl} alt=\"Gráfica de interacciones\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GeneradorTextoChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}