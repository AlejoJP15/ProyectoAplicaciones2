{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alejo\\\\OneDrive\\\\Documentos\\\\CHATBOTAP\\\\frontend\\\\src\\\\GeneradorTextoChatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./GeneradorTextoChatbot.css\"; // Estilos específicos del chatbot\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneradorTextoChatbot = () => {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [messages, setMessages] = useState([]); // Lista de mensajes\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Agregar mensaje del usuario\n    const userMessage = {\n      role: \"user\",\n      content: prompt\n    };\n    setMessages(prev => [...prev, userMessage]);\n    try {\n      const response = await fetch(\"http://localhost:3001/generateText\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt\n        })\n      });\n      const data = await response.json();\n      const botMessage = {\n        role: \"bot\",\n        content: data.response\n      };\n\n      // Agregar mensaje del bot\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error(\"Error al conectar con el backend:\", error);\n    }\n    setPrompt(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.role === \"user\" ? \"user\" : \"bot\"}`,\n        children: msg.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: prompt,\n        onChange: e => setPrompt(e.target.value),\n        placeholder: \"Escribe tu mensaje...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneradorTextoChatbot, \"VnEEgWXbldAnzkGAsJ40+yR7lmA=\");\n_c = GeneradorTextoChatbot;\nexport default GeneradorTextoChatbot;\nvar _c;\n$RefreshReg$(_c, \"GeneradorTextoChatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GeneradorTextoChatbot","_s","prompt","setPrompt","messages","setMessages","handleSubmit","e","preventDefault","userMessage","role","content","prev","response","fetch","method","headers","body","JSON","stringify","data","json","botMessage","error","console","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/alejo/OneDrive/Documentos/CHATBOTAP/frontend/src/GeneradorTextoChatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./GeneradorTextoChatbot.css\"; // Estilos específicos del chatbot\r\n\r\nconst GeneradorTextoChatbot = () => {\r\n  const [prompt, setPrompt] = useState(\"\");\r\n  const [messages, setMessages] = useState([]); // Lista de mensajes\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Agregar mensaje del usuario\r\n    const userMessage = { role: \"user\", content: prompt };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:3001/generateText\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ prompt }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      const botMessage = { role: \"bot\", content: data.response };\r\n\r\n      // Agregar mensaje del bot\r\n      setMessages((prev) => [...prev, botMessage]);\r\n    } catch (error) {\r\n      console.error(\"Error al conectar con el backend:\", error);\r\n    }\r\n\r\n    setPrompt(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-box\">\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message ${msg.role === \"user\" ? \"user\" : \"bot\"}`}\r\n          >\r\n            {msg.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={handleSubmit} className=\"input-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={prompt}\r\n          onChange={(e) => setPrompt(e.target.value)}\r\n          placeholder=\"Escribe tu mensaje...\"\r\n        />\r\n        <button type=\"submit\">Enviar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeneradorTextoChatbot;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}