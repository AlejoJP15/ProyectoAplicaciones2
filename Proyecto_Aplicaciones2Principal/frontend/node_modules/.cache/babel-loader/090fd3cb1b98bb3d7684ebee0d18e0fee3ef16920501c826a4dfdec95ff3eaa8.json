{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alejo\\\\OneDrive\\\\Documentos\\\\CHATBOTAP\\\\frontend\\\\src\\\\GeneradorTextoChatbot.js\",\n  _s = $RefreshSig$();\nimport React, { use, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GeneradorTextoChatbot() {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [conversation, setConversation] = useState(\"\");\n  const [isloading, setIsLoading] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const generateText = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setErrorMessage(\"\");\n    try {\n      const response = await fetch(\"http://localhost:3001/generateText\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          promt: prompt\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error`);\n      }\n      const data = await response.json();\n      const respuestaChatGPT = data.respuesta;\n      setConversation(prev => [...prev, {\n        sender: \"User\",\n        text: prompt\n      }, {\n        sender: \"ChatGPT\",\n        text: respuestaChatGPT\n      }]);\n    } catch (error) {\n      console.error(\"error\");\n      setErrorMessage(\"Error en la solicitud\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === \"User\" ? \"user\" : \"bot\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: generateText,\n      className: \"input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: promp,\n        onChange: e => setPrompt(e.target.value),\n        placeholder: \"Escribe tu mensaje...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isloading,\n        children: isloading ? \"Enviando...\" : \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(GeneradorTextoChatbot, \"lmU6a3jrPxAMlVveCdWaYni3ROI=\");\n_c = GeneradorTextoChatbot;\nexport default GeneradorTextoChatbot;\nvar _c;\n$RefreshReg$(_c, \"GeneradorTextoChatbot\");","map":{"version":3,"names":["React","use","useState","jsxDEV","_jsxDEV","GeneradorTextoChatbot","_s","prompt","setPrompt","conversation","setConversation","isloading","setIsLoading","errorMessage","setErrorMessage","generateText","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","promt","ok","Error","data","json","respuestaChatGPT","respuesta","prev","sender","text","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onSubmit","type","value","promp","onChange","target","placeholder","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/alejo/OneDrive/Documentos/CHATBOTAP/frontend/src/GeneradorTextoChatbot.js"],"sourcesContent":["import React, { use, useState } from \"react\";\r\n\r\nfunction GeneradorTextoChatbot(){\r\n  const[prompt,setPrompt]= useState(\"\");\r\n  const[conversation, setConversation]= useState(\"\");\r\n  const[isloading, setIsLoading]= useState(\"\");\r\n  const[errorMessage, setErrorMessage]= useState(\"\");\r\n  const generateText = async (e)=>{\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setErrorMessage(\"\");\r\n  \r\n    try{\r\n\r\n      const response = await fetch(\"http://localhost:3001/generateText\",{\r\n        method:  \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({promt: prompt})\r\n      });\r\n      \r\n      if(!response.ok){\r\n        throw new Error(`HTTP error`)\r\n      }\r\n      const data = await response.json();\r\n      const respuestaChatGPT = data.respuesta; \r\n      setConversation(prev =>[\r\n        ...prev,\r\n        {sender: \"User\", text: prompt},\r\n        {sender: \"ChatGPT\", text:respuestaChatGPT}\r\n      ])\r\n\r\n    }catch(error){\r\n      console.error(\"error\")\r\n      setErrorMessage(\"Error en la solicitud\")\r\n    }finally{\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {/* Mostrar errores si los hay */}\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n  \r\n      {/* Mostrar conversaci√≥n */}\r\n      <div className=\"chat-box\">\r\n        {conversation.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message ${msg.sender === \"User\" ? \"user\" : \"bot\"}`}\r\n          >\r\n            <strong>{msg.sender}:</strong> {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n  \r\n      {/* Input para el mensaje */}\r\n      <form onSubmit={generateText} className=\"input-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={promp}\r\n          onChange={(e) => setPrompt(e.target.value)}\r\n          placeholder=\"Escribe tu mensaje...\"\r\n          required\r\n        />\r\n        <button type=\"submit\" disabled={isloading}>\r\n          {isloading ? \"Enviando...\" : \"Enviar\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n  \r\n\r\n\r\n}\r\nexport default GeneradorTextoChatbot;\r\n\r\n \r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}