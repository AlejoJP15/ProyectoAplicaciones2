{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alejo\\\\Downloads\\\\Proyecto_Grado\\\\Proyecto_GradoSprint4 - copia\\\\CHATBOTAP\\\\frontend\\\\src\\\\GeneradorTextoChatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./GeneradorTextoChatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GeneradorTextoChatbot() {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [conversation, setConversation] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [graphUrl, setGraphUrl] = useState(\"\"); // Para almacenar la URL de la gráfica\n  const [sessionId, setSessionId] = useState(\"\");\n  const [nombreUsuario, setNombreUsuario] = useState(\"\");\n\n  // Obtener el session_id desde la URL y cargar el nombre del usuario\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const session_id = queryParams.get(\"session_id\");\n    const nombre = queryParams.get(\"nombre\");\n    if (session_id) {\n      setSessionId(session_id);\n    } else {\n      console.error(\"No se proporcionó un session_id en la URL.\");\n      setErrorMessage(\"No se encontró una sesión activa.\");\n      window.location.href = \"http://localhost:3000/login\";\n    }\n    if (nombre) {\n      setNombreUsuario(nombre);\n    }\n  }, []);\n\n  // Configurar la URL de la gráfica\n  useEffect(() => {\n    if (sessionId) {\n      setGraphUrl(`http://localhost:5000/api/user-interactions?session_id=${sessionId}`);\n    }\n  }, [sessionId]);\n  const generateText = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setErrorMessage(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/api/chatbot\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt,\n          id_sesion: sessionId,\n          nombre_usuario: nombreUsuario\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        setErrorMessage(errorData.error || \"Error desconocido en el servidor\");\n        return;\n      }\n      const data = await response.json();\n      const respuestaChatGPT = data.response;\n      setConversation(prev => [...prev, {\n        sender: nombreUsuario,\n        text: prompt\n      }, {\n        sender: \"Chatbot\",\n        text: respuestaChatGPT\n      }]);\n    } catch (error) {\n      console.error(\"Error en la solicitud:\", error);\n      setErrorMessage(\"Error en la solicitud al servidor\");\n    } finally {\n      setIsLoading(false);\n      setPrompt(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Bienvenido, \", nombreUsuario]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === nombreUsuario ? \"user\" : \"bot\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: generateText,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: prompt,\n        onChange: e => setPrompt(e.target.value),\n        placeholder: \"Escribe tu mensaje...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? \"Enviando...\" : \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), graphUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Estad\\xEDsticas de Interacciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: graphUrl,\n        alt: \"Gr\\xE1fica de interacciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(GeneradorTextoChatbot, \"w2+TcqURokLoBNzQ7qGl18ivlxU=\");\n_c = GeneradorTextoChatbot;\nexport default GeneradorTextoChatbot;\nvar _c;\n$RefreshReg$(_c, \"GeneradorTextoChatbot\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GeneradorTextoChatbot","_s","prompt","setPrompt","conversation","setConversation","isLoading","setIsLoading","errorMessage","setErrorMessage","graphUrl","setGraphUrl","sessionId","setSessionId","nombreUsuario","setNombreUsuario","queryParams","URLSearchParams","window","location","search","session_id","get","nombre","console","error","href","generateText","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","id_sesion","nombre_usuario","ok","errorData","json","data","respuestaChatGPT","prev","sender","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onSubmit","type","value","onChange","target","placeholder","required","disabled","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/alejo/Downloads/Proyecto_Grado/Proyecto_GradoSprint4 - copia/CHATBOTAP/frontend/src/GeneradorTextoChatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./GeneradorTextoChatbot.css\";\r\n\r\nfunction GeneradorTextoChatbot() {\r\n  const [prompt, setPrompt] = useState(\"\");\r\n  const [conversation, setConversation] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [graphUrl, setGraphUrl] = useState(\"\"); // Para almacenar la URL de la gráfica\r\n  const [sessionId, setSessionId] = useState(\"\");\r\n  const [nombreUsuario, setNombreUsuario] = useState(\"\");\r\n\r\n  // Obtener el session_id desde la URL y cargar el nombre del usuario\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n    const session_id = queryParams.get(\"session_id\");\r\n    const nombre = queryParams.get(\"nombre\");\r\n    if (session_id) {\r\n      setSessionId(session_id);\r\n    } else {\r\n      console.error(\"No se proporcionó un session_id en la URL.\");\r\n      setErrorMessage(\"No se encontró una sesión activa.\");\r\n      window.location.href = \"http://localhost:3000/login\";\r\n    }\r\n\r\n   \r\n    if (nombre) {\r\n      setNombreUsuario(nombre);\r\n    }\r\n  }, []);\r\n\r\n  // Configurar la URL de la gráfica\r\n  useEffect(() => {\r\n    if (sessionId) {\r\n      setGraphUrl(`http://localhost:5000/api/user-interactions?session_id=${sessionId}`);\r\n    }\r\n  }, [sessionId]);\r\n\r\n  const generateText = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setErrorMessage(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/chatbot\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ prompt, id_sesion: sessionId, nombre_usuario: nombreUsuario, }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        setErrorMessage(errorData.error || \"Error desconocido en el servidor\");\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      const respuestaChatGPT = data.response;\r\n\r\n      setConversation((prev) => [\r\n        ...prev,\r\n        { sender: nombreUsuario, text: prompt },\r\n        { sender: \"Chatbot\", text: respuestaChatGPT },\r\n      ]);\r\n    } catch (error) {\r\n      console.error(\"Error en la solicitud:\", error);\r\n      setErrorMessage(\"Error en la solicitud al servidor\");\r\n    } finally {\r\n      setIsLoading(false);\r\n      setPrompt(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h2>Bienvenido, {nombreUsuario}</h2>\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      <div className=\"chat-box\">\r\n        {conversation.map((msg, index) => (\r\n          <div key={index} className={`message ${msg.sender === nombreUsuario ? \"user\" : \"bot\"}`}>\r\n            <strong>{msg.sender}:</strong> {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={generateText}>\r\n        <input\r\n          type=\"text\"\r\n          value={prompt}\r\n          onChange={(e) => setPrompt(e.target.value)}\r\n          placeholder=\"Escribe tu mensaje...\"\r\n          required\r\n        />\r\n        <button type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? \"Enviando...\" : \"Enviar\"}\r\n        </button>\r\n      </form>\r\n      {graphUrl && (\r\n        <div className=\"graph-container\">\r\n          <h2>Estadísticas de Interacciones</h2>\r\n          <img src={graphUrl} alt=\"Gráfica de interacciones\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GeneradorTextoChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}