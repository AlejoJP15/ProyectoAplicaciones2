{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alejo\\\\Downloads\\\\Proyecto_Grado\\\\Proyecto_GradoSprint4 - copia\\\\CHATBOTAP\\\\frontend\\\\src\\\\GeneradorTextoChatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./GeneradorTextoChatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GeneradorTextoChatbot() {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [conversation, setConversation] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [graphUrl, setGraphUrl] = useState(\"\"); // Estado para la URL de la gráfica\n  const [sessionId, setSessionId] = useState(\"\"); // Estado para el session_id\n\n  // Obtener el session_id desde la URL\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const session_id = queryParams.get(\"session_id\");\n    if (session_id) {\n      setSessionId(session_id);\n    } else {\n      console.error(\"No se proporcionó un session_id en la URL.\");\n      // Redirigir al inicio de sesión si no hay session_id\n      window.location.href = \"http://localhost:3000\";\n    }\n  }, []);\n\n  // Obtener la URL de la gráfica al cargar el componente\n  useEffect(() => {\n    if (sessionId) {\n      setGraphUrl(`http://localhost:5000/api/graph?session_id=${sessionId}`); // URL de la imagen generada\n    }\n  }, [sessionId]);\n\n  // Cargar conversación desde localStorage\n  useEffect(() => {\n    const savedConversation = localStorage.getItem(\"conversation\");\n    if (savedConversation) {\n      setConversation(JSON.parse(savedConversation));\n    }\n  }, []);\n\n  // Guardar conversación en localStorage\n  useEffect(() => {\n    localStorage.setItem(\"conversation\", JSON.stringify(conversation));\n  }, [conversation]);\n  const generateText = async () => {\n    const prompt = mensajeUsuario;\n    const idSesion = localStorage.getItem(\"id_sesion\"); // Obtener id_sesion del almacenamiento local\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/chatbot\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt,\n          id_sesion: idSesion\n        }) // Enviar ambos datos\n      });\n      const data = await response.json();\n      if (data.response) {\n        actualizarConversacion(\"ChatGPT\", data.response); // Actualiza la conversación\n      } else {\n        console.error(\"Error en la respuesta:\", data.error);\n      }\n    } catch (error) {\n      console.error(\"Error al enviar el mensaje:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === \"Usuario\" ? \"user\" : \"bot\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: generateText,\n      className: \"input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: prompt,\n        onChange: e => setPrompt(e.target.value),\n        placeholder: \"Escribe tu mensaje...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? \"Enviando...\" : \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), graphUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Estad\\xEDsticas de Interacciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: graphUrl,\n        alt: \"Gr\\xE1fica de interacciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(GeneradorTextoChatbot, \"ZhXtSgIOz9X5bbmUzAnxObSl+40=\");\n_c = GeneradorTextoChatbot;\nexport default GeneradorTextoChatbot;\nvar _c;\n$RefreshReg$(_c, \"GeneradorTextoChatbot\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GeneradorTextoChatbot","_s","prompt","setPrompt","conversation","setConversation","isLoading","setIsLoading","errorMessage","setErrorMessage","graphUrl","setGraphUrl","sessionId","setSessionId","queryParams","URLSearchParams","window","location","search","session_id","get","console","error","href","savedConversation","localStorage","getItem","JSON","parse","setItem","stringify","generateText","mensajeUsuario","idSesion","response","fetch","method","headers","body","id_sesion","data","json","actualizarConversacion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","sender","text","onSubmit","type","value","onChange","e","target","placeholder","required","disabled","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/alejo/Downloads/Proyecto_Grado/Proyecto_GradoSprint4 - copia/CHATBOTAP/frontend/src/GeneradorTextoChatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./GeneradorTextoChatbot.css\";\r\n\r\nfunction GeneradorTextoChatbot() {\r\n  const [prompt, setPrompt] = useState(\"\");\r\n  const [conversation, setConversation] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [graphUrl, setGraphUrl] = useState(\"\"); // Estado para la URL de la gráfica\r\n  const [sessionId, setSessionId] = useState(\"\"); // Estado para el session_id\r\n\r\n  // Obtener el session_id desde la URL\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n    const session_id = queryParams.get(\"session_id\");\r\n    if (session_id) {\r\n      setSessionId(session_id);\r\n    } else {\r\n      console.error(\"No se proporcionó un session_id en la URL.\");\r\n      // Redirigir al inicio de sesión si no hay session_id\r\n      window.location.href = \"http://localhost:3000\";\r\n    }\r\n  }, []);\r\n\r\n  // Obtener la URL de la gráfica al cargar el componente\r\n  useEffect(() => {\r\n    if (sessionId) {\r\n      setGraphUrl(`http://localhost:5000/api/graph?session_id=${sessionId}`); // URL de la imagen generada\r\n    }\r\n  }, [sessionId]);\r\n\r\n  // Cargar conversación desde localStorage\r\n  useEffect(() => {\r\n    const savedConversation = localStorage.getItem(\"conversation\");\r\n    if (savedConversation) {\r\n      setConversation(JSON.parse(savedConversation));\r\n    }\r\n  }, []);\r\n\r\n  // Guardar conversación en localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"conversation\", JSON.stringify(conversation));\r\n  }, [conversation]);\r\n\r\n  const generateText = async () => {\r\n    const prompt = mensajeUsuario;\r\n    const idSesion = localStorage.getItem(\"id_sesion\"); // Obtener id_sesion del almacenamiento local\r\n  \r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/chatbot\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ prompt, id_sesion: idSesion }), // Enviar ambos datos\r\n      });\r\n  \r\n      const data = await response.json();\r\n      if (data.response) {\r\n        actualizarConversacion(\"ChatGPT\", data.response); // Actualiza la conversación\r\n      } else {\r\n        console.error(\"Error en la respuesta:\", data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al enviar el mensaje:\", error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {/* Mostrar errores si los hay */}\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n      {/* Mostrar conversación */}\r\n      <div className=\"chat-box\">\r\n        {conversation.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message ${msg.sender === \"Usuario\" ? \"user\" : \"bot\"}`}\r\n          >\r\n            <strong>{msg.sender}:</strong> {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Input para el mensaje */}\r\n      <form onSubmit={generateText} className=\"input-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={prompt}\r\n          onChange={(e) => setPrompt(e.target.value)}\r\n          placeholder=\"Escribe tu mensaje...\"\r\n          required\r\n        />\r\n        <button type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? \"Enviando...\" : \"Enviar\"}\r\n        </button>\r\n      </form>\r\n\r\n      {/* Mostrar la gráfica */}\r\n      {graphUrl && (\r\n        <div className=\"graph-container\">\r\n          <h2>Estadísticas de Interacciones</h2>\r\n          <img src={graphUrl} alt=\"Gráfica de interacciones\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GeneradorTextoChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}