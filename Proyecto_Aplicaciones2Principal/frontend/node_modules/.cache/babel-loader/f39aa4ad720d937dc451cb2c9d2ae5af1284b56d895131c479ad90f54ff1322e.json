{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alejo\\\\Downloads\\\\Proyecto_Grado\\\\Proyecto_Aplicaciones2Principal\\\\frontend\\\\src\\\\components\\\\register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const isEmailValid = email => {\n    const emailRegex = /^[^@]+@[^@]+\\.[^@]+$/; // Patrón básico para validar correos\n    return emailRegex.test(email);\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    setError(\"\"); // Limpiar errores previos\n\n    if (!name || !email || !password) {\n      setError(\"Por favor completa todos los campos\");\n      return;\n    }\n    // Validar que el correo tenga un formato válido\n    if (!isEmailValid(email)) {\n      setError(\"Por favor ingresa un correo válido\");\n      return;\n    }\n    setIsLoading(true); // Mostrar indicador de carga\n    try {\n      const response = await fetch(\"http://localhost:5000/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert(\"Registro exitoso. Ahora puedes iniciar sesión.\");\n        navigate(\"/login\"); // Redirige al login después de registrarse\n      } else {\n        setError(data.message || \"Error al registrarse\");\n      }\n    } catch (err) {\n      setError(\"Error al conectarse al servidor\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registrarse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nombre\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Correo\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Registrarse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/login\"),\n      children: \"Volver al Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"vFnegmMVHgr7dZP+bt8GdpXhxDY=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Register","_s","name","setName","email","setEmail","password","setPassword","error","setError","isLoading","setIsLoading","navigate","isEmailValid","emailRegex","test","handleRegister","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","success","alert","message","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/alejo/Downloads/Proyecto_Grado/Proyecto_Aplicaciones2Principal/frontend/src/components/register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Register() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const isEmailValid = (email) => {\r\n    const emailRegex = /^[^@]+@[^@]+\\.[^@]+$/; // Patrón básico para validar correos\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\"); // Limpiar errores previos\r\n\r\n    if (!name || !email || !password) {\r\n      setError(\"Por favor completa todos los campos\");\r\n      return;\r\n    }\r\n    // Validar que el correo tenga un formato válido\r\n    if (!isEmailValid(email)) {\r\n      setError(\"Por favor ingresa un correo válido\");\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true); // Mostrar indicador de carga\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ name, email, password }),\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        alert(\"Registro exitoso. Ahora puedes iniciar sesión.\");\r\n        navigate(\"/login\"); // Redirige al login después de registrarse\r\n      } else {\r\n        setError(data.message || \"Error al registrarse\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error al conectarse al servidor\");\r\n    }finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Registrarse</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <form onSubmit={handleRegister}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nombre\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Correo\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Contraseña\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Registrarse</button>\r\n      </form>\r\n      <button onClick={() => navigate(\"/login\")}>Volver al Login</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}