{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alejo\\\\Downloads\\\\Proyecto_Grado\\\\Proyecto_Aplicaciones2Principal\\\\CHATBOTAP\\\\frontend\\\\src\\\\GeneradorTextoChatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./GeneradorTextoChatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GeneradorTextoChatbot({\n  sessionId,\n  nombreUsuario\n}) {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [conversation, setConversation] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  // Validar que sessionId y nombreUsuario estén presentes\n  useEffect(() => {\n    if (!sessionId || !nombreUsuario) {\n      setErrorMessage(\"Faltan datos de sesión. Por favor, inicie sesión.\");\n      window.location.href = \"http://localhost:3000/login\";\n    }\n  }, [sessionId, nombreUsuario]);\n\n  // Base URL para el backend desde variables de entorno\n  const backendUrl = process.env.REACT_APP_BACKEND_URL || \"http://localhost:5000\";\n\n  // Función para enviar el prompt y obtener la respuesta del chatbot\n  const generateText = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setErrorMessage(\"\");\n    try {\n      const response = await fetch(`${backendUrl}/api/chatbot`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt,\n          id_sesion: sessionId,\n          nombre_usuario: nombreUsuario\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        setErrorMessage(errorData.error || \"Error desconocido en el servidor\");\n        return;\n      }\n      const data = await response.json();\n      const respuestaChatGPT = data.response;\n      setConversation(prev => [...prev, {\n        sender: nombreUsuario,\n        text: prompt\n      }, {\n        sender: \"Chatbot\",\n        text: respuestaChatGPT\n      }]);\n    } catch (error) {\n      console.error(\"Error en la solicitud:\", error);\n      setErrorMessage(\"Error en la solicitud al servidor\");\n    } finally {\n      setIsLoading(false);\n      setPrompt(\"\");\n    }\n  };\n\n  // Función para cerrar sesión\n  const handleLogout = () => {\n    localStorage.removeItem(\"id_sesion\");\n    localStorage.removeItem(\"nombre_usuario\");\n    window.location.href = \"http://localhost:3000/login\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Bienvenido, \", nombreUsuario]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === nombreUsuario ? \"user\" : \"bot\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: generateText,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: prompt,\n        onChange: e => setPrompt(e.target.value),\n        placeholder: \"Escribe tu mensaje...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? \"Enviando...\" : \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      className: \"logout-button\",\n      children: \"Cerrar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(GeneradorTextoChatbot, \"A3kYXfVtVT/109Vbj2GxQlGVyUg=\");\n_c = GeneradorTextoChatbot;\nexport default GeneradorTextoChatbot;\nvar _c;\n$RefreshReg$(_c, \"GeneradorTextoChatbot\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GeneradorTextoChatbot","sessionId","nombreUsuario","_s","prompt","setPrompt","conversation","setConversation","isLoading","setIsLoading","errorMessage","setErrorMessage","window","location","href","backendUrl","process","env","REACT_APP_BACKEND_URL","generateText","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","id_sesion","nombre_usuario","ok","errorData","json","error","data","respuestaChatGPT","prev","sender","text","console","handleLogout","localStorage","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onSubmit","type","value","onChange","target","placeholder","required","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/alejo/Downloads/Proyecto_Grado/Proyecto_Aplicaciones2Principal/CHATBOTAP/frontend/src/GeneradorTextoChatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./GeneradorTextoChatbot.css\";\r\n\r\nfunction GeneradorTextoChatbot({ sessionId, nombreUsuario }) {\r\n  const [prompt, setPrompt] = useState(\"\");\r\n  const [conversation, setConversation] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  // Validar que sessionId y nombreUsuario estén presentes\r\n  useEffect(() => {\r\n    if (!sessionId || !nombreUsuario) {\r\n      setErrorMessage(\"Faltan datos de sesión. Por favor, inicie sesión.\");\r\n      window.location.href = \"http://localhost:3000/login\";\r\n    }\r\n  }, [sessionId, nombreUsuario]);\r\n\r\n  // Base URL para el backend desde variables de entorno\r\n  const backendUrl = process.env.REACT_APP_BACKEND_URL || \"http://localhost:5000\";\r\n\r\n  // Función para enviar el prompt y obtener la respuesta del chatbot\r\n  const generateText = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setErrorMessage(\"\");\r\n\r\n    try {\r\n      const response = await fetch(`${backendUrl}/api/chatbot`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ prompt, id_sesion: sessionId, nombre_usuario: nombreUsuario }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        setErrorMessage(errorData.error || \"Error desconocido en el servidor\");\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      const respuestaChatGPT = data.response;\r\n\r\n      setConversation((prev) => [\r\n        ...prev,\r\n        { sender: nombreUsuario, text: prompt },\r\n        { sender: \"Chatbot\", text: respuestaChatGPT },\r\n      ]);\r\n    } catch (error) {\r\n      console.error(\"Error en la solicitud:\", error);\r\n      setErrorMessage(\"Error en la solicitud al servidor\");\r\n    } finally {\r\n      setIsLoading(false);\r\n      setPrompt(\"\");\r\n    }\r\n  };\r\n\r\n  // Función para cerrar sesión\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"id_sesion\");\r\n    localStorage.removeItem(\"nombre_usuario\");\r\n    window.location.href = \"http://localhost:3000/login\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h2>Bienvenido, {nombreUsuario}</h2>\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      <div className=\"chat-box\">\r\n        {conversation.map((msg, index) => (\r\n          <div key={index} className={`message ${msg.sender === nombreUsuario ? \"user\" : \"bot\"}`}>\r\n            <strong>{msg.sender}:</strong> {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={generateText}>\r\n        <input\r\n          type=\"text\"\r\n          value={prompt}\r\n          onChange={(e) => setPrompt(e.target.value)}\r\n          placeholder=\"Escribe tu mensaje...\"\r\n          required\r\n        />\r\n        <button type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? \"Enviando...\" : \"Enviar\"}\r\n        </button>\r\n      </form>\r\n      <button onClick={handleLogout} className=\"logout-button\">Cerrar Sesión</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GeneradorTextoChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}